micronaut:
  application:
    name: demo
  server:
    port: 8000
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
    cors:
      enabled: true
      configurations:
        web:
          allowedOrigins:
            - http://localhost:3000
          allowedMethods:
            - GET
            - POST
            - PUT
            - DELETE
          allowedHeaders:
            - Content-Type
            - Authorization
          exposedHeaders:
            - Content-Type
            - Authorization
          allowCredentials: true
          maxAge: 3600

netty:
  default:
    allocator:
      max-order: 3

logger:
  levels:
    com.example: DEBUG
    io.micronaut: INFO
    io.micronaut.http.client: DEBUG
    org.flywaydb: DEBUG

# JPA Configuration for Hibernate Reactive
jpa:
  default:
    reactive: true
    entity-scan:
      packages:
        - com.example.entity
    properties:
      hibernate:
        connection:
          url: jdbc:mysql://root:rootpassword@localhost:3306/booksdb
          driver_class: com.mysql.cj.jdbc.Driver
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: true
        format_sql: true
        hbm2ddl.auto: validate  # Changed from 'update' to 'validate' to let Flyway handle schema

# MySQL Connection Properties via Vertx (for reactive operations)
vertx:
  mysql:
    client:
      port: 3306
      host: localhost
      database: booksdb
      user: root
      password: rootpassword
      maxSize: 5

# Flyway Migration Configuration
flyway:
  datasources:
    default:
      enabled: true
      url: jdbc:mysql://localhost:3306/booksdb
      user: root
      password: rootpassword
      locations: classpath:db/migration
      baseline-on-migrate: true
      baseline-version: 0
      validate-on-migrate: true
